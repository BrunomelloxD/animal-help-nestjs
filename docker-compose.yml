version: '3.8'
services:
  nest-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nest-api
    command:
      - sh
      - -c
      - |
        npm install
        npx prisma migrate dev
        npm run start:dev
    restart: always
    ports:
      - 3000:3000
    depends_on:
      database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - .:/usr/node/app:rw
      - ./node_modules:/usr/node/app/node_modules:rw
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: animal_help
      RABBITMQ_URI: amqp://guest:guest@rabbitmq:5672
    networks:
      - app-network

  database:
    image: postgres:13
    container_name: database
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: animal_help
    ports:
      - 5432:5432
    env_file:
      - .env
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER:-postgres}']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    networks:
      - app-network

volumes:
  postgres:

networks:
  app-network:
    driver: bridge